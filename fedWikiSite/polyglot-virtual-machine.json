{
  "title": "Polyglot Virtual Machine",
  "story": [
    {
      "type": "markdown",
      "id": "4fd8600021ab6919",
      "text": "\n\n"
    },
    {
      "text": "There are two major projects that promise to bring [[polyglot programming]]within reach:",
      "id": "a75bf51814a65087",
      "type": "paragraph"
    },
    {
      "type": "markdown",
      "id": "25481bcc7037ccba",
      "text": "1. [[GraalVM]]\n1. [[WebAssembly]]"
    },
    {
      "type": "paragraph",
      "id": "8b81162a6079e479",
      "text": "It’s by now a cliché that JS has become the assembly language of the Web. Rather, JS is one syntax for a portable and safe machine language, let’s say. Today I’m pleased to announce that cross-browser work has begun on [[WebAssembly]], a new intermediate representation for safe code on the Web - [https://brendaneich.com/ brendaneich.com]"
    },
    {
      "text": "YOUTUBE PlmsweSNhTw\nECMAScript Harmony: Rise of the Compilers - Brendan Eich keynote - [https://www.youtube.com/watch?time_continue=1&v=PlmsweSNhTw youtube]",
      "id": "81018ff1490d5125",
      "type": "video"
    },
    {
      "text": "# What",
      "id": "567ab0ef8eeb4317",
      "type": "markdown"
    },
    {
      "text": "[[WebAssembly]], “wasm” for short, .wasm filename suffix, a new binary syntax for low-level safe code, initially co-expressive with asm.js, but in the long run able to diverge from JS’s semantics, in order to best serve as common object-level format for multiple source-level programming languages.",
      "id": "48ab4304584233f9",
      "type": "paragraph"
    },
    {
      "text": "# How",
      "id": "2007e07fcefbc91f",
      "type": "markdown"
    },
    {
      "text": "If you use [[Emscripten]], then [[wasm]] support via a command-line flag will at first include and target the prototype polyfill. ",
      "id": "21baf7d385f48f85",
      "type": "paragraph"
    },
    {
      "type": "markdown",
      "id": "d8209faa-021c-49be-8248-296eb9859079",
      "text": "# See also\n"
    },
    {
      "type": "markdown",
      "id": "629dc45fb39168cf",
      "text": "- [[Polyglot programming]]\n- [[Polyglot (computing)]]\n- [[Polyglot Webservice Hosting]]\n- [[polyglot.fed.wiki.org]]\n- [[Vert.x]]\n- [[Transpiler]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Polyglot Virtual Machine",
        "story": []
      },
      "date": 1524064326530
    },
    {
      "item": {
        "type": "factory",
        "id": "4168926d5bc9c85c"
      },
      "id": "4168926d5bc9c85c",
      "type": "add",
      "date": 1524064362844
    },
    {
      "type": "edit",
      "id": "4168926d5bc9c85c",
      "item": {
        "type": "paragraph",
        "id": "4168926d5bc9c85c",
        "text": "GraalVM is a universal virtual machine for running applications written in JavaScript, Python, Ruby, R, JVM-based languages like Java, Scala, Kotlin, and LLVM-based languages such as C and C++.\n\n"
      },
      "date": 1524064369067
    },
    {
      "type": "add",
      "id": "61d2822e703d993d",
      "item": {
        "type": "paragraph",
        "id": "61d2822e703d993d",
        "text": "GraalVM removes the isolation between programming languages and enables interoperability in a shared runtime. It can run either standalone or in the context of OpenJDK, Node.js, Oracle Database, or MySQL."
      },
      "after": "4168926d5bc9c85c",
      "date": 1524064372201
    },
    {
      "type": "edit",
      "id": "4168926d5bc9c85c",
      "item": {
        "type": "paragraph",
        "id": "4168926d5bc9c85c",
        "text": "GraalVM is a universal virtual machine for running applications written in JavaScript, Python, Ruby, R, JVM-based languages like Java, Scala, Kotlin, and LLVM-based languages such as C and C++.\n[https://www.graalvm.org/ site]"
      },
      "date": 1524064397972
    },
    {
      "item": {
        "type": "factory",
        "id": "a9958444e1839379"
      },
      "id": "a9958444e1839379",
      "type": "add",
      "after": "61d2822e703d993d",
      "date": 1524064918131
    },
    {
      "type": "edit",
      "id": "a9958444e1839379",
      "item": {
        "type": "video",
        "id": "a9958444e1839379",
        "text": "YOUTUBE oWX2tpIO4Yc\n(double-click to edit caption)\n"
      },
      "date": 1524064927924
    },
    {
      "type": "edit",
      "id": "a9958444e1839379",
      "item": {
        "type": "video",
        "id": "a9958444e1839379",
        "text": "YOUTUBE oWX2tpIO4Yc\nPublished on Apr 23, 2017."
      },
      "date": 1524064968879
    },
    {
      "item": {
        "type": "factory",
        "id": "91e98f75c1cbdafc"
      },
      "id": "91e98f75c1cbdafc",
      "type": "add",
      "after": "a9958444e1839379",
      "date": 1524066283136
    },
    {
      "type": "edit",
      "id": "91e98f75c1cbdafc",
      "item": {
        "type": "paragraph",
        "id": "91e98f75c1cbdafc",
        "text": "@GraalVM reached 1.0 today, the JavaScript implementation is open sourced,  Graal Python is open sourced; there is a new website with the docs and examples, the community edition binaries are available on GitHub. Congrats, everyone! "
      },
      "date": 1524066297634
    },
    {
      "type": "edit",
      "id": "91e98f75c1cbdafc",
      "item": {
        "type": "paragraph",
        "id": "91e98f75c1cbdafc",
        "text": "@GraalVM reached 1.0 today, the JavaScript implementation is open sourced,  Graal Python is open sourced; there is a new website with the docs and examples, the community edition binaries are available on GitHub. Congrats, everyone! [https://twitter.com/shelajev/status/986280382952812545 twitter]"
      },
      "date": 1524066319281
    },
    {
      "item": {
        "type": "factory",
        "id": "38dd8386f261aba5"
      },
      "id": "38dd8386f261aba5",
      "type": "add",
      "after": "91e98f75c1cbdafc",
      "date": 1524066453715
    },
    {
      "type": "edit",
      "id": "38dd8386f261aba5",
      "item": {
        "type": "video",
        "id": "38dd8386f261aba5",
        "text": "YOUTUBE ZbccuoaLChk\n(double-click to edit caption)\n"
      },
      "date": 1524066462916
    },
    {
      "type": "edit",
      "id": "38dd8386f261aba5",
      "item": {
        "type": "video",
        "id": "38dd8386f261aba5",
        "text": "YOUTUBE ZbccuoaLChk\nPublished on Nov 9, 2017."
      },
      "date": 1524066488857
    },
    {
      "item": {
        "type": "factory",
        "id": "5152bc56ab09c8da"
      },
      "id": "5152bc56ab09c8da",
      "type": "add",
      "after": "38dd8386f261aba5",
      "date": 1524066555725
    },
    {
      "type": "edit",
      "id": "5152bc56ab09c8da",
      "item": {
        "type": "paragraph",
        "id": "5152bc56ab09c8da",
        "text": "Twitter is a massively distributed system with thousands of machines running thousands of JVMs. In any similar big system a small change in performance and CPU utilization is multiplied thousandfold and results in big savings. Electricity costs, cooling costs, and possibly reduction of server farm size. One way to improve Java performance and reduce CPU utilization is to simply generate better machine code."
      },
      "date": 1524066562892
    },
    {
      "type": "edit",
      "id": "5152bc56ab09c8da",
      "item": {
        "type": "paragraph",
        "id": "5152bc56ab09c8da",
        "text": "Twitter is a massively distributed system with thousands of machines running thousands of JVMs. In any similar big system a small change in performance and CPU utilization is multiplied thousandfold and results in big savings. Twitter is going down that road and experimenting with Graal to generate better code and reduce cost."
      },
      "date": 1524066605380
    },
    {
      "type": "fork",
      "site": "found.ward.bay.wiki.org",
      "date": 1524073030116
    },
    {
      "type": "edit",
      "id": "91e98f75c1cbdafc",
      "item": {
        "type": "paragraph",
        "id": "91e98f75c1cbdafc",
        "text": "# Features"
      },
      "date": 1524120887838
    },
    {
      "type": "add",
      "id": "ad94557f396abc27",
      "item": {
        "type": "paragraph",
        "id": "ad94557f396abc27",
        "text": "Run your code faster and more efficiently\nInteroperate directly with most modern programming languages\nEmbed languages with the Graal SDK\nCreate compiled native images\nUse a single set of tools to monitor, debug, and profile all your code\n"
      },
      "after": "91e98f75c1cbdafc",
      "date": 1524120889245
    },
    {
      "type": "add",
      "id": "d79607012807c0aa",
      "item": {
        "type": "paragraph",
        "id": "d79607012807c0aa",
        "text": "- [https://twitter.com/shelajev/status/986280382952812545 twitter]"
      },
      "after": "ad94557f396abc27",
      "date": 1524120899019
    },
    {
      "type": "edit",
      "id": "d79607012807c0aa",
      "item": {
        "type": "markdown",
        "id": "d79607012807c0aa",
        "text": "- [https://twitter.com/shelajev/status/986280382952812545 twitter]"
      },
      "date": 1524120900724
    },
    {
      "type": "move",
      "order": [
        "4168926d5bc9c85c",
        "61d2822e703d993d",
        "a9958444e1839379",
        "91e98f75c1cbdafc",
        "ad94557f396abc27",
        "38dd8386f261aba5",
        "5152bc56ab09c8da",
        "d79607012807c0aa"
      ],
      "id": "d79607012807c0aa",
      "date": 1524120903830
    },
    {
      "type": "edit",
      "id": "d79607012807c0aa",
      "item": {
        "type": "markdown",
        "id": "d79607012807c0aa",
        "text": "# See also\n- [https://twitter.com/shelajev/status/986280382952812545 twitter]"
      },
      "date": 1524120909228
    },
    {
      "type": "edit",
      "id": "91e98f75c1cbdafc",
      "item": {
        "type": "markdown",
        "id": "91e98f75c1cbdafc",
        "text": "# Features"
      },
      "date": 1524120912948
    },
    {
      "type": "edit",
      "id": "ad94557f396abc27",
      "item": {
        "type": "paragraph",
        "id": "ad94557f396abc27",
        "text": "- Run your code faster and more efficiently\nInteroperate directly with most modern programming languages\n- Embed languages with the Graal SDK\n- Create compiled native images\n- Use a single set of tools to monitor, debug, and profile all your code\n"
      },
      "date": 1524120923940
    },
    {
      "type": "edit",
      "id": "ad94557f396abc27",
      "item": {
        "type": "markdown",
        "id": "ad94557f396abc27",
        "text": "- Run your code faster and more efficiently\nInteroperate directly with most modern programming languages\n- Embed languages with the Graal SDK\n- Create compiled native images\n- Use a single set of tools to monitor, debug, and profile all your code\n"
      },
      "date": 1524120924931
    },
    {
      "type": "move",
      "order": [
        "4168926d5bc9c85c",
        "a9958444e1839379",
        "61d2822e703d993d",
        "91e98f75c1cbdafc",
        "ad94557f396abc27",
        "38dd8386f261aba5",
        "5152bc56ab09c8da",
        "d79607012807c0aa"
      ],
      "id": "61d2822e703d993d",
      "date": 1524120931068
    },
    {
      "type": "edit",
      "id": "d79607012807c0aa",
      "item": {
        "type": "markdown",
        "id": "d79607012807c0aa",
        "text": "# See also\n- https://www.graalvm.org/docs/reference-manual/polyglot/\n- [https://twitter.com/shelajev/status/986280382952812545 twitter]"
      },
      "date": 1524120981870
    },
    {
      "type": "edit",
      "id": "d79607012807c0aa",
      "item": {
        "type": "markdown",
        "id": "d79607012807c0aa",
        "text": "# See also\n- Polyglot VM - [https://www.graalvm.org/docs/reference-manual/polyglot/ graalvm.org]\n- [https://twitter.com/shelajev/status/986280382952812545 twitter]"
      },
      "date": 1524121002966
    },
    {
      "type": "edit",
      "id": "d79607012807c0aa",
      "item": {
        "type": "markdown",
        "id": "d79607012807c0aa",
        "text": "# See also\n\n- Polyglot VM - [https://www.graalvm.org/docs/reference-manual/polyglot/ graalvm.org]"
      },
      "date": 1524121029034
    },
    {
      "type": "edit",
      "id": "d79607012807c0aa",
      "item": {
        "type": "markdown",
        "id": "d79607012807c0aa",
        "text": "# See also\n\n- Polyglot VM - [https://www.graalvm.org/docs/reference-manual/polyglot/ graalvm.org]\n- Embed languages - [https://www.graalvm.org/docs/graalvm-as-a-platform/embed/#build-a-shell-for-many-languages graalvm.org]\n- [https://twitter.com/shelajev/status/986280382952812545 twitter]"
      },
      "date": 1524121061281
    },
    {
      "type": "edit",
      "id": "5152bc56ab09c8da",
      "item": {
        "type": "paragraph",
        "id": "5152bc56ab09c8da",
        "text": "# Scale"
      },
      "date": 1524121145757
    },
    {
      "type": "edit",
      "id": "5152bc56ab09c8da",
      "item": {
        "type": "markdown",
        "id": "5152bc56ab09c8da",
        "text": "# Scale"
      },
      "date": 1524121147342
    },
    {
      "type": "add",
      "id": "99882fad3a26acdb",
      "item": {
        "type": "paragraph",
        "id": "99882fad3a26acdb",
        "text": "Twitter is a massively distributed system with thousands of machines running thousands of JVMs. In any similar big system a small change in performance and CPU utilization is multiplied thousandfold and results in big savings. Twitter is going down that road and experimenting with Graal to generate better code and reduce cost."
      },
      "after": "5152bc56ab09c8da",
      "date": 1524121148307
    },
    {
      "type": "add",
      "id": "265feff1790a9e7f",
      "item": {
        "type": "markdown",
        "id": "265feff1790a9e7f",
        "text": "# SimpleLanguage\n"
      },
      "after": "ad94557f396abc27",
      "date": 1524121169140
    },
    {
      "type": "add",
      "id": "fe9bc08cf9291d32",
      "item": {
        "type": "markdown",
        "id": "fe9bc08cf9291d32",
        "text": "https://www.graalvm.org/docs/graalvm-as-a-platform/implement-language/"
      },
      "after": "265feff1790a9e7f",
      "date": 1524121174771
    },
    {
      "type": "edit",
      "id": "265feff1790a9e7f",
      "item": {
        "type": "markdown",
        "id": "265feff1790a9e7f",
        "text": "# Implement your own language\n"
      },
      "date": 1524121588219
    },
    {
      "type": "add",
      "id": "77ab285e393110d1",
      "item": {
        "type": "markdown",
        "id": "77ab285e393110d1",
        "text": "Graal makes it easy to optimise a language that you implement, and to make it available in a polyglot context - [https://www.graalvm.org/docs/graalvm-as-a-platform/implement-language/ graalvm.org]\n"
      },
      "after": "265feff1790a9e7f",
      "date": 1524121637850
    },
    {
      "type": "edit",
      "id": "77ab285e393110d1",
      "item": {
        "type": "markdown",
        "id": "77ab285e393110d1",
        "text": "Graal makes it easy to optimise a language that you implement, and to make it available in a polyglot context - [https://www.graalvm.org/docs/graalvm-as-a-platform/implement-language/ graalvm.org]\n\n"
      },
      "date": 1524121692565
    },
    {
      "type": "add",
      "id": "aae07d546cc15359",
      "item": {
        "type": "markdown",
        "id": "aae07d546cc15359",
        "text": "Given an [[abstract syntax tree]] you can use Graal to compile the language down to bitecode so that it runs within the GraalVM.\n"
      },
      "after": "77ab285e393110d1",
      "date": 1524121742741
    },
    {
      "type": "edit",
      "id": "aae07d546cc15359",
      "item": {
        "type": "markdown",
        "id": "aae07d546cc15359",
        "text": "Given an [[abstract syntax tree]] created in a language like Java, you can use Graal to compile the language down to bitecode so that it runs within the GraalVM.\n"
      },
      "date": 1524121901894
    },
    {
      "type": "remove",
      "id": "fe9bc08cf9291d32",
      "date": 1524121912134
    },
    {
      "type": "edit",
      "id": "aae07d546cc15359",
      "item": {
        "type": "markdown",
        "id": "aae07d546cc15359",
        "text": "Given an [[abstract syntax tree]] created in a language like Java, you can use Graal to compile the language down to bitecode so that it runs within the GraalVM.\n\n"
      },
      "date": 1524122343511
    },
    {
      "type": "add",
      "id": "ec68564b89a673e0",
      "item": {
        "type": "markdown",
        "id": "ec68564b89a673e0",
        "text": "# Coco/R\n"
      },
      "after": "aae07d546cc15359",
      "date": 1524122345789
    },
    {
      "type": "add",
      "id": "18b5a9a37f239818",
      "item": {
        "type": "markdown",
        "id": "18b5a9a37f239818",
        "text": "Coco/R is a compiler generator, which takes an attributed grammar of a source language and generates a scanner and a parser for this language. The scanner works as a deterministic finite automaton. The parser uses recursive descent. LL(1) conflicts can be resolved by a multi-symbol lookahead or by semantic checks. Thus the class of accepted grammars is LL(k) for an arbitrary k.\n\nThere are versions of Coco/R for different languages (see below). The latest versions from the University of Linz are those for C#, Java and C++, which can be downloaded from this site."
      },
      "after": "ec68564b89a673e0",
      "date": 1524122348066
    },
    {
      "type": "edit",
      "id": "18b5a9a37f239818",
      "item": {
        "type": "markdown",
        "id": "18b5a9a37f239818",
        "text": "Coco/R is a compiler generator, which takes an attributed grammar of a source language and generates a scanner and a parser for this language. The scanner works as a deterministic finite automaton. The parser uses recursive descent. LL(1) conflicts can be resolved by a multi-symbol lookahead or by semantic checks. Thus the class of accepted grammars is LL(k) for an arbitrary k.\n\nThere are versions of Coco/R for different languages (see below). The latest versions from the University of Linz are those for C#, Java and C++, which can be downloaded from - [http://www.ssw.uni-linz.ac.at/coco/ uni-linz.ac.at]"
      },
      "date": 1524122377524
    },
    {
      "type": "add",
      "id": "4fd8600021ab6919",
      "item": {
        "type": "markdown",
        "id": "4fd8600021ab6919",
        "text": "\n\n"
      },
      "after": "aae07d546cc15359",
      "date": 1524122430071
    },
    {
      "type": "remove",
      "id": "ec68564b89a673e0",
      "date": 1524122435141
    },
    {
      "type": "remove",
      "id": "18b5a9a37f239818",
      "date": 1524122438485
    },
    {
      "type": "add",
      "id": "c5cc3379da6a75b6",
      "item": {
        "type": "markdown",
        "id": "c5cc3379da6a75b6",
        "text": "The SimpleLanguage example uses [[Coco]] to generate an abstract syntax tree from code (I think).\n\n"
      },
      "after": "aae07d546cc15359",
      "date": 1524123544760
    },
    {
      "type": "edit",
      "id": "77ab285e393110d1",
      "item": {
        "type": "markdown",
        "id": "77ab285e393110d1",
        "text": "Graal makes it easy to optimise a language that you implement, and to make it available in a polyglot context."
      },
      "date": 1524123551706
    },
    {
      "type": "remove",
      "id": "aae07d546cc15359",
      "date": 1524123553036
    },
    {
      "type": "edit",
      "id": "77ab285e393110d1",
      "item": {
        "type": "markdown",
        "id": "77ab285e393110d1",
        "text": "Graal makes it easy to optimise a language that you implement, and to make it available in a polyglot context. Given an [[abstract syntax tree]] created in a language like Java, you can use Graal to compile the language down to bitecode so that it runs within the GraalVM.\n\n"
      },
      "date": 1524123555333
    },
    {
      "type": "edit",
      "id": "c5cc3379da6a75b6",
      "item": {
        "type": "markdown",
        "id": "c5cc3379da6a75b6",
        "text": "The SimpleLanguage example uses [[Coco]] to generate an abstract syntax tree from code (I think) - [https://www.graalvm.org/docs/graalvm-as-a-platform/implement-language/ graalvm.org]\n\n\n\n"
      },
      "date": 1524123560659
    },
    {
      "type": "fork",
      "site": "server.platform.earth",
      "date": 1541689814164
    },
    {
      "type": "edit",
      "id": "4168926d5bc9c85c",
      "item": {
        "type": "paragraph",
        "id": "4168926d5bc9c85c",
        "text": "[[GraalVM]] is a universal virtual machine for running applications written in JavaScript, Python, Ruby, R, JVM-based languages like Java, Scala, Kotlin, and LLVM-based languages such as C and C++.\n[https://www.graalvm.org/ site]"
      },
      "date": 1541689831150
    },
    {
      "type": "fork",
      "site": "openscience.cc",
      "date": 1545413283012
    },
    {
      "type": "remove",
      "id": "4168926d5bc9c85c",
      "date": 1545413505490
    },
    {
      "type": "remove",
      "id": "a9958444e1839379",
      "date": 1545413539500
    },
    {
      "type": "remove",
      "id": "38dd8386f261aba5",
      "date": 1545413546198
    },
    {
      "type": "remove",
      "id": "5152bc56ab09c8da",
      "date": 1545413551118
    },
    {
      "type": "remove",
      "id": "c5cc3379da6a75b6",
      "date": 1545413556027
    },
    {
      "type": "remove",
      "id": "99882fad3a26acdb",
      "date": 1545413560535
    },
    {
      "type": "remove",
      "id": "d79607012807c0aa",
      "date": 1545413580898
    },
    {
      "type": "add",
      "item": {
        "text": "There are two major projects that promise to bring [[polyglot programming]]within reach:",
        "id": "a75bf51814a65087",
        "type": "paragraph"
      },
      "after": "4fd8600021ab6919",
      "id": "a75bf51814a65087",
      "date": 1545413588095
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "25481bcc7037ccba",
        "text": "1. [[GraalVM]] ([[Polyglot Virtual Machine]])\n1. [[WebAssembly]]"
      },
      "after": "a75bf51814a65087",
      "id": "25481bcc7037ccba",
      "date": 1545413597553
    },
    {
      "type": "edit",
      "id": "25481bcc7037ccba",
      "item": {
        "type": "markdown",
        "id": "25481bcc7037ccba",
        "text": "1. [[GraalVM]] (a [[Polyglot Virtual Machine]])\n1. [[WebAssembly]]"
      },
      "date": 1545413608406
    },
    {
      "type": "edit",
      "id": "25481bcc7037ccba",
      "item": {
        "type": "markdown",
        "id": "25481bcc7037ccba",
        "text": "1. [[GraalVM]]\n1. [[WebAssembly]]"
      },
      "date": 1545413621461
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "8b81162a6079e479",
        "text": "It’s by now a cliché that JS has become the assembly language of the Web. Rather, JS is one syntax for a portable and safe machine language, let’s say. Today I’m pleased to announce that cross-browser work has begun on [[WebAssembly]], a new intermediate representation for safe code on the Web - [https://brendaneich.com/ brendaneich.com]"
      },
      "after": "25481bcc7037ccba",
      "id": "8b81162a6079e479",
      "date": 1545413627688
    },
    {
      "type": "add",
      "item": {
        "text": "YOUTUBE PlmsweSNhTw\nECMAScript Harmony: Rise of the Compilers - Brendan Eich keynote - [https://www.youtube.com/watch?time_continue=1&v=PlmsweSNhTw youtube]",
        "id": "81018ff1490d5125",
        "type": "video"
      },
      "after": "8b81162a6079e479",
      "id": "81018ff1490d5125",
      "date": 1545413630760
    },
    {
      "type": "add",
      "item": {
        "text": "# What",
        "id": "567ab0ef8eeb4317",
        "type": "markdown"
      },
      "after": "81018ff1490d5125",
      "id": "567ab0ef8eeb4317",
      "date": 1545413633933
    },
    {
      "type": "add",
      "item": {
        "text": "[[WebAssembly]], “wasm” for short, .wasm filename suffix, a new binary syntax for low-level safe code, initially co-expressive with asm.js, but in the long run able to diverge from JS’s semantics, in order to best serve as common object-level format for multiple source-level programming languages.",
        "id": "48ab4304584233f9",
        "type": "paragraph"
      },
      "after": "567ab0ef8eeb4317",
      "id": "48ab4304584233f9",
      "date": 1545413637000
    },
    {
      "type": "add",
      "item": {
        "text": "If you use [[Emscripten]], then [[wasm]] support via a command-line flag will at first include and target the prototype polyfill. ",
        "id": "21baf7d385f48f85",
        "type": "paragraph"
      },
      "after": "48ab4304584233f9",
      "id": "21baf7d385f48f85",
      "date": 1545413639729
    },
    {
      "type": "add",
      "item": {
        "text": "# How",
        "id": "2007e07fcefbc91f",
        "type": "markdown"
      },
      "after": "48ab4304584233f9",
      "id": "2007e07fcefbc91f",
      "date": 1545413642877
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "d8209faa-021c-49be-8248-296eb9859079",
        "text": "# See also\n\n- [[Polyglot Virtual Machine]]\n- [[Polyglot programming]]\n- [[Polyglot (computing)]]\n- [[Polyglot Webservice Hosting]]\n- [[polyglot.fed.wiki.org]]\n- [[Vert.x]]\n- [[Transpiler]]"
      },
      "after": "567ab0ef8eeb4317",
      "id": "d8209faa-021c-49be-8248-296eb9859079",
      "date": 1545413647238
    },
    {
      "type": "move",
      "order": [
        "4fd8600021ab6919",
        "a75bf51814a65087",
        "25481bcc7037ccba",
        "8b81162a6079e479",
        "81018ff1490d5125",
        "567ab0ef8eeb4317",
        "48ab4304584233f9",
        "2007e07fcefbc91f",
        "21baf7d385f48f85",
        "d8209faa-021c-49be-8248-296eb9859079"
      ],
      "id": "d8209faa-021c-49be-8248-296eb9859079",
      "date": 1545413651421
    },
    {
      "type": "edit",
      "id": "d8209faa-021c-49be-8248-296eb9859079",
      "item": {
        "type": "markdown",
        "id": "d8209faa-021c-49be-8248-296eb9859079",
        "text": "# See also\n"
      },
      "date": 1545413655000
    },
    {
      "type": "add",
      "id": "629dc45fb39168cf",
      "item": {
        "type": "markdown",
        "id": "629dc45fb39168cf",
        "text": "\n- [[Polyglot Virtual Machine]]\n- [[Polyglot programming]]\n- [[Polyglot (computing)]]\n- [[Polyglot Webservice Hosting]]\n- [[polyglot.fed.wiki.org]]\n- [[Vert.x]]\n- [[Transpiler]]"
      },
      "after": "d8209faa-021c-49be-8248-296eb9859079",
      "date": 1545413655329
    },
    {
      "type": "edit",
      "id": "629dc45fb39168cf",
      "item": {
        "type": "markdown",
        "id": "629dc45fb39168cf",
        "text": "- [[Polyglot programming]]\n- [[Polyglot (computing)]]\n- [[Polyglot Webservice Hosting]]\n- [[polyglot.fed.wiki.org]]\n- [[Vert.x]]\n- [[Transpiler]]"
      },
      "date": 1545413664151
    }
  ]
}